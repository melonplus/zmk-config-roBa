#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&meiryo INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        meiryo: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(A) &kp LC(A) &kp LEFT_ALT &kp H &kp F &kp F &kp M &kp E &kp I &kp TAB>;

            label = "TO_LAYER_0";
        };

        N: N {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_ALT &kp H &kp N &kp N>;

            label = "N";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&meiryo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W             &kp E           &kp R    &kp T                                          &kp Y        &kp U  &lt 5 I    &kp O         &kp P
&kp A           &kp S             &kp D           &kp F    &kp G        &kp LS(LG(S))      &kp MINUS      &kp H        &kp J  &kp K      &kp L         &kp SEMICOLON
&kp Z           &kp X             &kp C           &kp V    &kp B        &kp TAB            &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &lt 5 PERIOD  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &mt RCTRL ESCAPE  &lt 2 LEFT_ALT  &kp F10  &lt 1 ENTER  &lt 4 GRAVE        &kp BACKSPACE  &lt 2 SPACE                                  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp RIGHT_BRACKET  &kp F7     &kp F8        &kp F9  &kp F10                         &kp LS(NUMBER_1)  &kp RS(EQUAL)           &kp LS(NUMBER_8)  &kp LS(NUMBER_9)         &kp LS(NUMBER_2)
&kp BACKSLASH      &kp F4     &kp F5        &kp F6  &kp F11  &trans      &trans     &trans            &meiryo                 &trans            &trans                   &kp SLASH
&kp LG(L)          &kp LG(E)  &kp F2        &kp F6  &kp F12  &trans      &trans     &N                &kp LG(LS(LEFT_ARROW))  &trans            &kp LS(LG(RIGHT_ARROW))  &kp QUESTION
&trans             &kp LCTRL  &kp LEFT_ALT  &trans  &trans   &trans      &kp LC(C)  &kp LC(V)                                                                            &kp UNDERSCORE
            >;
        };

        NUM {
            bindings = <
&kp LA(TAB)     &kp N7              &kp NUMBER_8  &kp N9        &kp PERIOD                                       &trans         &kp HOME        &kp F2          &kp END          &trans
&kp SLASH       &kp NUMBER_4        &kp NUMBER_5  &kp NUMBER_6  &kp N0      &kp LC(LA(KP_NUMBER_0))      &trans  &kp LA(LC(V))  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &trans
&kp LEFT_WIN    &kp NUMBER_1        &kp NUMBER_2  &kp NUMBER_3  &kp COMMA   &trans                       &trans  &trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &mt LCTRL NUMBER_0  &kp LEFT_ALT  &kp LC(C)     &kp ENTER   &kp LC(V)                    &trans  &trans                                                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp INTERNATIONAL_1  &kp INT2             &kp INTERNATIONAL_3  &kp INTERNATIONAL_4  &kp INTERNATIONAL_5
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp INTERNATIONAL_6  &kp INTERNATIONAL_7  &kp INTERNATIONAL_8  &kp INTERNATIONAL_9  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans               &trans               &trans               &trans               &trans
&kp LEFT_SHIFT  &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
